swagger: '2.0'
info:
  title: mG4.tv API
  description: |
    The api used by mG4 to manage streaming video content and metadata
  version: "1.0.0"
# the domain of the service
host: api.mg4.tv
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  /groups:
    post:
      summary: Create group
      description: |
        Create a new video production group.
      tags:
        - Groups
      parameters:
        - name: new group
          in: body
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        201:
          $ref: '#/responses/201Created'
        400:
          $ref: '#/responses/400BadRequest'
        401:
          $ref: '#/responses/401Unauthorized'
        403:
          $ref: '#/responses/403Forbidden'
        409:
          $ref: '#/responses/409Conflict'
        415:
          $ref: '#/responses/415UnsupportedMediaType'
        422:
          $ref: '#/responses/422UnprocessableEntity'
        429:
          $ref: '#/responses/429TooManyRequests'
        default:
          $ref: '#/responses/5xxDefault'

  /groups/{name}:
    parameters:
      - name: name
        in: path
        required: true
        type: string
    delete:
      summary: Delete group
      tags:
        - Groups
      responses:
        204:
          $ref: '#/responses/204NoContent'
        401:
          $ref: '#/responses/401Unauthorized'
        403:
          $ref: '#/responses/403Forbidden'
        404:
          $ref: '#/responses/404NotFound'
        415:
          $ref: '#/responses/415UnsupportedMediaType'
        422:
          $ref: '#/responses/422UnprocessableEntity'
        429:
          $ref: '#/responses/429TooManyRequests'
        default:
          $ref: '#/responses/5xxDefault'
    get:
      summary: Get group
      tags:
        - Groups
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Group'
        404:
          $ref: '#/responses/404NotFound'
        default:
          $ref: '#/responses/5xxDefault'
    patch:
      summary: Partially update group
      parameters:
        - name: partially updated group
          in: body
          required: true
          schema:
            $ref: '#/definitions/Group'
      tags:
        - Groups
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Group'
        400:
          $ref: '#/responses/400BadRequest'
        401:
          $ref: '#/responses/401Unauthorized'
        403:
          $ref: '#/responses/403Forbidden'
        404:
          $ref: '#/responses/404NotFound'
        409:
          $ref: '#/responses/409Conflict'
        default:
          $ref: '#/responses/5xxDefault'
    post:
      summary: Create group
      parameters:
        - name: new group
          in: body
          required: true
          schema:
            $ref: '#/definitions/Group'
      tags:
        - Groups
      responses:
        201:
          $ref: '#/responses/201Created'
        400:
          $ref: '#/responses/400BadRequest'
        401:
          $ref: '#/responses/401Unauthorized'
        403:
          $ref: '#/responses/403Forbidden'
        409:
          $ref: '#/responses/409Conflict'
        default:
          $ref: '#/responses/5xxDefault'
    put:
      summary: Update group
      parameters:
        - name: updated group
          in: body
          required: true
          schema:
            $ref: '#/definitions/Group'
      tags:
        - Groups
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Group'
        400:
          $ref: '#/responses/400BadRequest'
        401:
          $ref: '#/responses/401Unauthorized'
        403:
          $ref: '#/responses/403Forbidden'
        409:
          $ref: '#/responses/409Conflict'
        default:
          $ref: '#/responses/5xxDefault'

  /groups/{name}/permissions:
    parameters:
      - name: name
        in: path
        required: true
        type: string
    delete:
      summary: Delete group
      tags:
        - Groups
      responses:
        204:
          description: Success (no content)
        401:
          $ref: '#/responses/401Unauthorized'
        403:
          $ref: '#/responses/403Forbidden'
        404:
          $ref: '#/responses/404NotFound'
        default:
          $ref: '#/responses/5xxDefault'
    get:
      summary: Get group
      tags:
        - Groups
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Permission'
        404:
          $ref: '#/responses/404NotFound'
        default:
          $ref: '#/responses/5xxDefault'
    post:
      summary: Create group
      parameters:
        - name: new group
          in: body
          required: true
          schema:
            $ref: '#/definitions/Permission'
      tags:
        - Groups
      responses:
        201:
          description: Created
        400:
          $ref: '#/responses/400BadRequest'
        401:
          $ref: '#/responses/401Unauthorized'
        403:
          $ref: '#/responses/403Forbidden'
        409:
          $ref: '#/responses/409Conflict'
        default:
          $ref: '#/responses/5xxDefault'

  /groups/{name}/videos:
    parameters:
      - name: name
        in: path
        required: true
        type: string
    delete:
      summary: Delete all videos on a group
      tags:
        - Groups
        - Videos
        - Admin
      responses:
        204:
          $ref: '#/responses/204NoContent'
        401:
          $ref: '#/responses/401Unauthorized'
        403:
          $ref: '#/responses/403Forbidden'
        404:
          $ref: '#/responses/404NotFound'
        default:
          $ref: '#/responses/5xxDefault'
    get:
      summary: Get group videos
      tags:
        - Groups
        - Videos
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Video'
        404:
          $ref: '#/responses/404NotFound'
        default:
          $ref: '#/responses/5xxDefault'
    post:
      summary: Create group video
      parameters:
        - name: new group video
          in: body
          required: true
          schema:
            $ref: '#/definitions/Video'
      tags:
        - Groups
        - Videos
      responses:
        201:
          $ref: '#/responses/201Created'
        400:
          $ref: '#/responses/400BadRequest'
        401:
          $ref: '#/responses/401Unauthorized'
        403:
          $ref: '#/responses/403Forbidden'
        409:
          $ref: '#/responses/409Conflict'
        default:
          $ref: '#/responses/5xxDefault'

  /groups/{name}/users:
    parameters:
      - name: name
        in: path
        required: true
        type: string
    get:
      summary: Get all group users
      tags:
        - Groups
        - Users
        - Permissions
      responses:
        200:
          description: No content
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        404:
          $ref: '#/responses/404NotFound'
        default:
          $ref: '#/responses/5xxDefault'
    post:
      summary: Add a user to a group
      tags:
        - Groups
        - Users
        - Permissions
      responses:
        201:
          $ref: '#/responses/201Created'
        401:
          $ref: '#/responses/401Unauthorized'
        403:
          $ref: '#/responses/403Forbidden'
        404:
          $ref: '#/responses/404NotFound'
        default:
          $ref: '#/responses/5xxDefault'

  /permissions:
    post:
      summary: Create permission
      tags:
        - Permissions
      responses:
        201:
          $ref: '#/responses/201Created'
        400:
          $ref: '#/responses/400BadRequest'
        401:
          $ref: '#/responses/401Unauthorized'
        403:
          $ref: '#/responses/403Forbidden'
        default:
          $ref: '#/responses/5xxDefault'

  /permissions/{id}:
    parameters:
      - name: id
        in: path
        required: true
        type: string
        format: UUID
    delete:
      summary: Delete permission
      tags:
        - Permissions
      responses:
        204:
          $ref: '#/responses/204NoContent'
        401:
          $ref: '#/responses/401Unauthorized'
        403:
          $ref: '#/responses/403Forbidden'
        default:
          $ref: '#/responses/5xxDefault'
    get:
      summary: Get permission
      tags:
        - Permissions
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Permission'
        401:
          $ref: '#/responses/401Unauthorized'
        404:
          $ref: '#/responses/404NotFound'
        default:
          $ref: '#/responses/5xxDefault'

  /users/{username}:
    get:
      summary: User profile information
      description: |
        Placeholder text
      parameters:
        - name: username
          in: path
          required: true
          type: string
          format: UTF-8
      tags:
        - Users
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/User'
        404:
          $ref: '#/responses/404NotFound'
        default:
          $ref: '#/responses/5xxDefault'

  /users/{username}/videos:
    get:
      summary: User profile information
      description: |
        Placeholder text
      parameters:
        - name: username
          in: path
          required: true
          type: string
          format: UTF-8
      tags:
        - Users
        - Videos
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Video'
        404:
          $ref: '#/responses/404NotFound'
        default:
          $ref: '#/responses/5xxDefault'

  /users/{username}/groups:
    get:
      summary: User group information
      parameters:
        - name: username
          in: path
          required: true
          type: string
          format: UTF-8
      tags:
        - Users
        - Groups
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
        404:
          $ref: '#/responses/404NotFound'
        default:
          $ref: '#/responses/5xxDefault'

  /videos:
    get:
      summary: Get a list of videos
      description: |
        Get a list of videos
      tags:
        - Admin
        - Videos
      responses:
        200:
          description: Success
    post:
      summary: Creates a video
      description: |
        ### Note: "Try this operation" will not work.
      consumes:
        - multipart/related
        - application/json
        - video/mp4
      parameters:
        - name: MultipartVideoRequest
          in: body
          required: true
          schema:
            type: string
            format: binary
        - name: Content-Range
          in: header
          required: true
          type: string
      tags:
        - Videos
      responses:
        201:
          $ref: '#/responses/201Created'
        400:
          $ref: '#/responses/400BadRequest'
        401:
          $ref: '#/responses/401Unauthorized'
        403:
          $ref: '#/responses/403Forbidden'
        415:
          $ref: '#/responses/415UnsupportedMediaType'
        422:
          $ref: '#/responses/422UnprocessableEntity'
        429:
          $ref: '#/responses/429TooManyRequests'
        default:
          $ref: '#/responses/5xxDefault'
  /videos/{id}:
    parameters:
      - name: id
        in: path
        required: true
        type: string
        format: UUID
    delete:
      summary: Delete a video by id
      description: |
        Delete a video by id
      responses:
        204:
          $ref: '#/responses/204NoContent'
        400:
          $ref: '#/responses/400BadRequest'
        401:
          $ref: '#/responses/401Unauthorized'
        403:
          $ref: '#/responses/403Forbidden'
        404:
          $ref: '#/responses/404NotFound'
        429:
          $ref: '#/responses/429TooManyRequests'
        default:
          $ref: '#/responses/5xxDefault'
    get:
      summary: Get a video by id
      description: |
        Get a video resource by id
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Video'
        400:
          $ref: '#/responses/400BadRequest'
        401:
          $ref: '#/responses/401Unauthorized'
        403:
          $ref: '#/responses/403Forbidden'
        404:
          $ref: '#/responses/404NotFound'
        429:
          $ref: '#/responses/429TooManyRequests'
        default:
          $ref: '#/responses/5xxDefault'
    patch:
      summary: Partially updates a video
      description: |
        ### Note: "Try this operation" will not work.
      consumes:
        - multipart/related
        - application/json
        - video/mp4
      parameters:
        - name: Content-Range
          in: header
          required: true
          type: string
      tags:
        - Videos
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Video'
        400:
          $ref: '#/responses/400BadRequest'
        401:
          $ref: '#/responses/401Unauthorized'
        403:
          $ref: '#/responses/403Forbidden'
        404:
          $ref: '#/responses/404NotFound'
        415:
          $ref: '#/responses/415UnsupportedMediaType'
        422:
          $ref: '#/responses/422UnprocessableEntity'
        429:
          $ref: '#/responses/429TooManyRequests'
        default:
          $ref: '#/responses/5xxDefault'
    put:
      summary: Partially updates a video
      description: |
        ### Note: "Try this operation" will not work.
      consumes:
        - multipart/related
        - application/json
        - video/mp4
      parameters:
        - name: Content-Range
          in: header
          required: true
          type: string
      tags:
        - Videos
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Video'
        400:
          $ref: '#/responses/400BadRequest'
        401:
          $ref: '#/responses/401Unauthorized'
        403:
          $ref: '#/responses/403Forbidden'
        404:
          $ref: '#/responses/404NotFound'
        415:
          $ref: '#/responses/415UnsupportedMediaType'
        422:
          $ref: '#/responses/422UnprocessableEntity'
        429:
          $ref: '#/responses/429TooManyRequests'
        default:
          $ref: '#/responses/5xxDefault'


responses:
  201Created:
    description: |
      **Created**. The resource was created and can now be accessed at
      the URL provided in the "Location" header
    headers:
      Location:
        description: The URL of the successfully created resource
        type: string
        format: URL
    schema:
      $ref: '#/definitions/ServerResponse'

  204NoContent:
    description: |
      **No content**. The resource was deleted successfully and no longer
      exists.

  400BadRequest:
    description: |
      **Bad request**. The resource was not created, returned or modified
      because of a syntax error in the request. Typically this is due to
      malformed JSON or improperly-typed ids.
    schema:
      $ref: '#/definitions/ServerResponse'

  401Unauthorized:
    description: |
      **Unauthorized**. The resource was not created, returned or modified
      because authentication was not provided but is required.
    headers:
      WWW-Authenticate:
        description: The authentication scheme to use to access the entity
        type: string
        format: UTF-8
    schema:
      $ref: '#/definitions/ServerResponse'

  403Forbidden:
    description: |
      **Forbidden**. The resource was not created, returned or modified because
      the authenticated user does not have permissions to create it.
    schema:
      $ref: '#/definitions/ServerResponse'

  404NotFound:
    description: |
      **Not found**. The resource could not be returned because it was either
      not found or the authenticated user does not have sufficient permissions
      to know about its existence.
    schema:
      $ref: '#/definitions/ServerResponse'

  409Conflict:
    description: |
      **Conflict**. The resource was not created or modified because one or more
      of its fields conflicts with a unique constraint for the resouce. The
      problematic fields are named in the "fields" key of the response.
      It is possible that the field is "id" if the resource already exists.
    schema:
      $ref: '#/definitions/ServerResponse'

  415UnsupportedMediaType:
    description: |
      **Unsupported media type**. The resource was not created or modified
      because the request used an unsupported media type.
    schema:
      $ref: '#/definitions/ServerResponse'

  422UnprocessableEntity:
    description: |
      **Unprocessable entity**. The resource was not created or modified because
      the request had extraneous, missing or improperly-typed fields. The
      problematic fields are named in the "fields" key of the response.
    schema:
      $ref: '#/definitions/ServerResponse'

  429TooManyRequests:
    description: |
      **Too many requests**. The resource was not created, returned or modified
      because the requesting client has exceeded the rate limit of the API.
    headers:
      X-RateLimit-Limit:
        description: The rate limit ceiling for that particular call
        type: number
      X-RateLimit-Remaining:
        description: The rate limit remaining in a 15 minute window.
        type: number
      X-RateLimit-Reset:
        description: |
          The UTC Unix epcoh time when the current rate limit window ends
          and rates reset.
        type: number
        format: UTC Unix epoch
    schema:
      $ref: '#/definitions/ServerResponse'

  5xxDefault:
    description: |
      **Unexpected error**. The action was not performed because the server or
      network experienced some other error. This error may be handled by a
      gateway, reverse proxy or load balancer and served as a **5xx** response.
      An attempt will be made to adhere to the schema when possible.
    schema:
      $ref: '#/definitions/ServerResponse'


definitions:
  ServerResponse:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: number
        format: HTTP response code
        description: |
          A serialized representation of the HTTP response code returned in
          the header
      message:
        type: string
        format: UTF-8
        description: |
          A human-readable message describing the reason for the Error
      fields:
        type: array
        items:
          type: string
        description: |
          A list of fields that the API believes is causing the Error
      location:
        type: string
        format: URL
        description: The URL location of the created resource

  Group:
    type: object
    properties:
      id:
        type: string
        format: UUID
      name:
        type: string
        format: UTF-8

  Permission:
    type: object
    properties:
      id:
        type: string
        format: UUID
      group_id:
        type: string
        format: UUID
      name:
        type: string
        format: UTF-8

  User:
    type: object
    properties:
      id:
        type: string
        format: UUID
      username:
        type: string
        format: UTF-8

  Video:
    type: object
    properties:
      id:
        type: string
        format: UUID
