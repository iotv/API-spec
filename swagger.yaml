# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: mG4.tv API
  description: |
    The api used by mG4 to manage streaming video content and metadata
  version: "1.0.0"
# the domain of the service
host: api.mg4.tv
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  /groups/{name}:
    parameters:
      - name: name
        in: path
        required: true
        type: string
    delete:
      summary: Delete group
      tags:
        - Groups
      responses:
        204:
          description: Success (no content)
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get group
      tags:
        - Groups
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Group'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Partially update group
      parameters:
        - name: partially updated group
          in: body
          required: true
          schema:
            $ref: '#/definitions/Group'
      tags:
        - Groups
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Group'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/Error'
        409:
          description: Conflict
          schema: 
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create group
      parameters:
        - name: new group
          in: body
          required: true
          schema:
            $ref: '#/definitions/Group'
      tags:
        - Groups
      responses:
        201:
          description: Created
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        409:
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update group
      parameters:
        - name: updated group
          in: body
          required: true
          schema:
            $ref: '#/definitions/Group'
      tags:
        - Groups
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Group'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        409:
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
 
  /groups/{name}/permissions:
    parameters:
      - name: name
        in: path
        required: true
        type: string
    delete:
      summary: Delete group
      tags:
        - Groups
      responses:
        204:
          description: Success (no content)
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get group
      tags:
        - Groups
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Permission'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create group
      parameters:
        - name: new group
          in: body
          required: true
          schema:
            $ref: '#/definitions/Permission'
      tags:
        - Groups
      responses:
        201:
          description: Created
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        409:
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /groups/{name}/videos:
    parameters:
      - name: name
        in: path
        required: true
        type: string
    delete:
      summary: Delete all videos on a group
      tags:
        - Groups
        - Videos
        - Admin
      responses:
        204:
          description: Success (no content)
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get group videos
      tags:
        - Groups
        - Videos
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Video'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create group video
      parameters:
        - name: new group video
          in: body
          required: true
          schema:
            $ref: '#/definitions/Video'
      tags:
        - Groups
        - Videos
      responses:
        201:
          description: Created
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        409:
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      
  /users/{username}:
    get:
      summary: User profile information
      description: |
        Placeholder text
      parameters:
        - name: username
          in: path
          required: true
          type: string
          format: UTF-8
      tags:
        - Users
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/User'
        404:
          description: User not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  
  /users/{username}/videos:
    get:
      summary: User profile information
      description: |
        Placeholder text
      parameters:
        - name: username
          in: path
          required: true
          type: string
          format: UTF-8
      tags:
        - Users
        - Videos
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Video'
        404:
          description: User not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /users/{username}/groups:
    get:
      summary: User group information
      parameters:
        - name: username
          in: path
          required: true
          type: string
          format: UTF-8
      tags:
        - Users
        - Groups
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
        404:
          description: User not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

definitions:
  Error:
    type: object
    properties:
      code:
        type: number
        format: number
        description: A serialized representation of the HTTP error code returned in the header
      message:
        type: string
        description: A human-readable message describing the reason for the error
      fields:
        type: array
        items: 
          type: string
        description: A list of fields that the API believes is causing the error

  Group:
    type: object
    properties:
      id:
        type: string
        format: UUID
      name:
        type: string
        format: UTF-8

  Permission:
    type: object
    properties:
      id:
        type: string
        format: UUID
      name:
        type: string
        format: UTF-8

  User:
    type: object
    properties:
      id:
        type: string
        format: UUID
      username:
        type: string
        format: UTF-8

  Video:
    type: object
    properties:
      id:
        type: string
        format: UUID
